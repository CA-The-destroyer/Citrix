
  # Sanity check
"cust=[$cust]"
# Must look like 8-4-4-4-12 hex
if ($cust -notmatch '^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$') {
  throw "CustomerId is invalid: '$cust'. Paste the GUID (no angle brackets, no org name)."
}


$base = "https://api-us.cloud.com"         # your region
$tokenUri = "$base/cctrustoauth2/$cust/tokens/clients"
$odataUri = "$base/monitorodata/$cust/v4/data/Machines?`$top=1000"
"POST -> $tokenUri"; "GET -> $odataUri"



$tok = Invoke-RestMethod -Method Post -Uri $tokenUri -ContentType "application/x-www-form-urlencoded" -Body "grant_type=client_credentials&client_id=$cid&client_secret=$sec"
Invoke-RestMethod -Method Get -Uri $odataUri -Headers @{ Authorization = "Bearer $($tok.access_token)"; "Citrix-CustomerId" = $cust; Accept = "application/json" } | ConvertTo-Json -Depth 6 | Out-File .\machines.json -Encoding utf8





Invoke-RestMethod -Uri "https://api-us.cloud.com/monitorodata/<CustomerId>/v4/data/Machines?`$top=1000" -Headers @{Authorization="CwsAuth bearer <ACCESS_TOKEN>";"Citrix-CustomerId"="<CustomerId>";Accept="application/json"} -Method Get | ConvertTo-Json -Depth 6 | Out-File .\machines.json -Encoding utf8



Invoke-RestMethod -Uri "$base/monitorodata/$cust/v4/data/Machines?`$top=1000" `
  -Headers @{ Authorization = "bearer $($tok.access_token)"; "Citrix-CustomerId" = $cust; Accept = "application/json" } `
  -Method Get


Invoke-RestMethod -Uri "$base/monitorodata/$cust/v4/data/Machines?`$top=1000" `
  -Headers @{ Authorization = "Bearer $($tok.access_token)"; "Citrix-CustomerId" = $cust; Accept = "application/json" } `
  -Method Get | ConvertTo-Json -Depth 6 | Out-File .\machines.json -Encoding utf8

##########################

# ==== Setup ====
$base = "https://api-us.cloud.com"   # or api-eu / api-ap-s / api.citrixcloud.jp
$cust = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"   # your real CustomerId GUID
$cid  = "your-client-id"
$sec  = "your-client-secret"

# ==== Get bearer token ====
$tok = Invoke-RestMethod -Method Post -Uri "$base/cctrustoauth2/$cust/tokens/clients" `
  -ContentType "application/x-www-form-urlencoded" `
  -Body "grant_type=client_credentials&client_id=$cid&client_secret=$sec"

# ==== Use it to pull machines (first 1000) ====
Invoke-RestMethod -Uri "$base/monitorodata/$cust/v4/data/Machines?`$top=1000" `
  -Headers @{ Authorization = "Bearer $($tok.access_token)"; "Citrix-CustomerId" = $cust; Accept = "application/json" } `
  -Method Get | ConvertTo-Json -Depth 6 | Out-File .\machines.json -Encoding utf8


